{
  "env": {
    "browser": false,
    "es6": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "sourceType": "module",
    "tsconfigRootDir": "./"
  },
  "plugins": ["@typescript-eslint", "prettier", "sonarjs", "import"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "ignorePatterns": [
    "node_modules/",
    "build/",
    "dist/",
    "coverage/",
    "src/types/proto/"
  ],
  "overrides": [
    {
      // ignore migration files from some linting rules
      "files": ["src/database/postgres/migrations/*.js"],
      "rules": {
        "import/no-commonjs": "off",
        "@typescript-eslint/naming-convention": "off"
      }
    },
    {
      // ignore model files from cyclic dependency linting rule
      "files": ["src/database/postgres/models/*"],
      "rules": {
        "import/no-cycle": "off"
      }
    }
  ],
  "rules": {
    "brace-style": ["error", "1tbs"],
    "no-tabs": 0,
    "semi": "error",
    "global-require": 0,
    "no-param-reassign": 0,
    "curly": ["error", "all"],
    "prefer-const": "error",
    "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 1 }],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      },
      { "blankLine": "always", "prev": "block-like", "next": "block-like" }
    ],
    "max-len": [
      "error",
      {
        "code": 100,
        "tabWidth": 2,
        "comments": 150,
        "ignoreComments": false,
        "ignoreTrailingComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "no-underscore-dangle": "off",
    "no-unused-expressions": "off",
    "import/prefer-default-export": "off",
    "no-shadow": "off",
    "quotes": ["warn", "single"],
    "prettier/prettier": [
      "error",
      {
        "useTabs": false,
        "printWidth": 100,
        "tabWidth": 2,
        "singleQuote": true,
        "semi": true,
        "trailingComma": "all",
        "bracketSpacing": true,
        "rcVerbose": true,
        "arrowParens": "always"
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "args": "none",
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase", "UPPER_CASE"],
        "filter": {
          // you can expand this regex to add more allowed names
          "regex": "(Errors|Success|Error)$",
          "match": false
        },
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": ["typeLike"],
        "format": ["PascalCase"]
      },
      {
        "selector": ["variable"],
        "modifiers": ["const", "exported"],
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      },
      {
        "selector": ["objectLiteralProperty"],
        "format": ["camelCase", "snake_case", "PascalCase"]
      },
      {
        "selector": [
          "classProperty",
          "objectLiteralProperty",
          "typeProperty",
          "classMethod",
          "objectLiteralMethod",
          "typeMethod",
          "accessor",
          "enumMember"
        ],
        "format": null,
        "modifiers": ["requiresQuotes"]
      },
      {
        "selector": ["typeAlias"],
        "prefix": ["T"],
        "format": ["PascalCase"]
      },
      {
        "selector": ["interface"],
        "prefix": ["I"],
        "format": ["PascalCase"]
      },
      {
        "selector": ["enumMember"],
        "format": null
      },
      {
        "selector": "variable",
        "modifiers": ["destructured"],
        "format": null
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/interface-name-prefix": 0,
    "import/no-cycle": 1,
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "internal",
          "external",
          "object",
          "type",
          "parent",
          "sibling",
          "index"
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "newlines-between": "always",
        "pathGroupsExcludedImportTypes": ["builtin"]
      }
    ],
    "import/first": 1,
    // "import/exports-last": ["warn"],
    "import/no-namespace": 1,
    "import/extensions": ["error", "never"],
    "import/no-useless-path-segments": [
      "error",
      {
        "noUselessIndex": true
      }
    ],
    "import/no-deprecated": 1,
    "import/no-commonjs": ["error"],
    "import/no-unassigned-import": [
      "error",
      { "allow": ["dotenv-safe/config", "dotenv/config"] }
    ],
    "import/no-duplicates": ["error"],
    "sonarjs/cognitive-complexity": ["warn"],
    "sonarjs/no-identical-expressions": ["error"],
    "eqeqeq": ["error", "always"],
    "max-params": ["error", 4],
    "no-lonely-if": ["error"],
    "spaced-comment": ["error", "always"],
    "yoda": ["error", "never"],
    "no-console": ["error", { "allow": ["debug", "warn", "error", "info"] }],
    "no-loss-of-precision": "off",
    "@typescript-eslint/no-loss-of-precision": "off",
    "no-useless-return": ["error"],
    "@typescript-eslint/array-type": [
      "error",
      { "default": "generic", "readonly": "generic" }
    ],
    "@typescript-eslint/consistent-generic-constructors": ["error"],
    "@typescript-eslint/consistent-indexed-object-style": ["error"],
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/ban-types": ["error"],
    "@typescript-eslint/method-signature-style": ["error"],
    "@typescript-eslint/no-confusing-non-null-assertion": ["warn"],
    "@typescript-eslint/no-duplicate-enum-values": ["error"],
    "@typescript-eslint/no-explicit-any": ["warn"],
    // "@typescript-eslint/no-floating-promises": [
    //   "warn",
    //   { "ignoreIIFE": true, "ignoreVoid": true }
    // ],
    "@typescript-eslint/no-for-in-array": ["error"],
    "@typescript-eslint/no-non-null-asserted-optional-chain": ["error"],
    "@typescript-eslint/no-non-null-assertion": "off",
    "no-constant-condition": ["warn"],
    "@typescript-eslint/non-nullable-type-assertion-style": ["warn"]
  }
}
